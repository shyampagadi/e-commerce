name: E2E and API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: postgres
          POSTGRES_DB: ecommerce_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          tests/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Setup database
      run: |
        python database/setup.py --all
      env:
        DATABASE_URL: postgresql://postgres:admin@localhost:5432/ecommerce_db
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: ecommerce_db
        DB_USER: postgres
        DB_PASSWORD: admin
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Install test dependencies
      run: |
        cd tests
        npm ci
        npx playwright install --with-deps
    
    - name: Start backend server
      run: |
        cd backend
        uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 10
      env:
        DATABASE_URL: postgresql://postgres:admin@localhost:5432/ecommerce_db
    
    - name: Start frontend server
      run: |
        cd frontend
        npm start &
        sleep 30
      env:
        REACT_APP_API_URL: http://localhost:8000
        REACT_APP_API_BASE_URL: http://localhost:8000/api/v1
    
    - name: Run API tests
      run: |
        cd tests
        npx playwright test api/
    
    - name: Run E2E tests
      run: |
        cd tests
        npx playwright test e2e/
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: tests/playwright-report/
        retention-days: 30
    
    - name: Upload test videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-videos
        path: tests/test-results/
        retention-days: 30
