name: E-commerce Foundation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Kubernetes tools
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.2'
    
    - name: Install kubeval
      run: |
        wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
        tar xf kubeval-linux-amd64.tar.gz
        sudo mv kubeval /usr/local/bin
    
    - name: Validate Kubernetes manifests
      run: kubeval k8s-manifests/*.yaml
    
    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'
    
    - name: Lint Helm chart
      run: helm lint helm-charts/ecommerce

  test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Kubernetes tools
      uses: azure/setup-kubectl@v3
    
    - name: Run comprehensive tests
      run: |
        chmod +x validation/comprehensive-tests.sh
        ./validation/comprehensive-tests.sh

  security:
    runs-on: ubuntu-latest
    needs: validate
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    environment: staging
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Helm
      uses: azure/setup-helm@v3
    
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBECONFIG_STAGING }}" | base64 -d > $HOME/.kube/config
    
    - name: Deploy to staging
      run: |
        helm upgrade --install ecommerce-staging helm-charts/ecommerce \
          --namespace ecommerce-staging \
          --create-namespace \
          --set global.imageTag=${{ github.sha }} \
          --set global.namespace=ecommerce-staging

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Helm
      uses: azure/setup-helm@v3
    
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBECONFIG_PRODUCTION }}" | base64 -d > $HOME/.kube/config
    
    - name: Deploy to production
      run: |
        helm upgrade --install ecommerce helm-charts/ecommerce \
          --namespace ecommerce \
          --create-namespace \
          --set global.imageTag=${{ github.sha }}
