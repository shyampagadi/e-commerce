apiVersion: apps/v1
kind: Deployment
metadata:
  name: customers-service
  namespace: petclinic
  labels:
    app: customers-service
    component: microservice
    tier: business
spec:
  replicas: 2
  selector:
    matchLabels:
      app: customers-service
  template:
    metadata:
      labels:
        app: customers-service
        component: microservice
        tier: business
    spec:
      containers:
      - name: customers-service
        image: springcommunity/spring-petclinic-customers-service:3.2.0
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: CONFIG_SERVER_URL
          value: "http://config-server:8888"
        - name: DISCOVERY_SERVER_URL
          value: "http://discovery-server:8761/eureka"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql-customers:3306/petclinic?useSSL=false&serverTimezone=UTC"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "*"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: customers-service
  namespace: petclinic
  labels:
    app: customers-service
    component: microservice
spec:
  selector:
    app: customers-service
  ports:
  - port: 8081
    targetPort: 8081
    name: http
  type: ClusterIP
