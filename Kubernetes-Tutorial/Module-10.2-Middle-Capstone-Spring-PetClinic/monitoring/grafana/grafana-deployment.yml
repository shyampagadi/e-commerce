apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: petclinic
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
               "access":"proxy",
                "editable": true,
                "name": "prometheus",
                "orgId": 1,
                "type": "prometheus",
                "url": "http://prometheus:9090",
                "version": 1
            }
        ]
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: petclinic
data:
  dashboards.yaml: |-
    {
        "apiVersion": 1,
        "providers": [
            {
                "folder": "Spring Boot",
                "name": "spring-boot",
                "options": {
                    "path": "/var/lib/grafana/dashboards/spring-boot"
                },
                "orgId": 1,
                "type": "file"
            }
        ]
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-boot-dashboard
  namespace: petclinic
data:
  spring-boot-dashboard.json: |-
    {
      "dashboard": {
        "id": null,
        "title": "Spring PetClinic Microservices",
        "tags": ["spring-boot", "microservices", "petclinic"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "JVM Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "jvm_memory_used_bytes{job=\"spring-boot-apps\"}",
                "legendFormat": "{{instance}} - {{area}}"
              }
            ],
            "yAxes": [
              {
                "unit": "bytes"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "HTTP Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_server_requests_seconds_count{job=\"spring-boot-apps\"}[5m])",
                "legendFormat": "{{instance}} - {{method}} {{uri}}"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 0
            }
          },
          {
            "id": 3,
            "title": "HTTP Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_server_requests_seconds_sum{job=\"spring-boot-apps\"}[5m]) / rate(http_server_requests_seconds_count{job=\"spring-boot-apps\"}[5m])",
                "legendFormat": "{{instance}} - {{method}} {{uri}}"
              }
            ],
            "yAxes": [
              {
                "unit": "s"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 8
            }
          },
          {
            "id": 4,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "process_cpu_usage{job=\"spring-boot-apps\"}",
                "legendFormat": "{{instance}}"
              }
            ],
            "yAxes": [
              {
                "unit": "percentunit"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 8
            }
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: petclinic
  labels:
    app: grafana
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
      - name: grafana
        image: grafana/grafana:10.0.0
        ports:
        - containerPort: 3000
          name: http-grafana
          protocol: TCP
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        - name: GF_INSTALL_PLUGINS
          value: ""
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-pv
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards-config
          readOnly: false
        - mountPath: /var/lib/grafana/dashboards/spring-boot
          name: spring-boot-dashboard
          readOnly: false
      volumes:
      - name: grafana-pv
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          defaultMode: 420
          name: grafana-datasources
      - name: grafana-dashboards-config
        configMap:
          defaultMode: 420
          name: grafana-dashboards-config
      - name: spring-boot-dashboard
        configMap:
          defaultMode: 420
          name: spring-boot-dashboard

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: petclinic
  labels:
    app: grafana
    component: monitoring
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: http-grafana
  selector:
    app: grafana
  type: ClusterIP
